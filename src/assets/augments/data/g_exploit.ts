import { StatEnum, statObject } from "../../stat";

import { augment, Augment } from "../augment";
import { GroupEnumAugment } from "../groupEnum";

const data: Augment[] = [];

// const makeAugmentExploit = (
//   name: string,
//   level: number,
//   stats: Partial<{ [K in StatEnum]: number }>,
// ): Augment => {
//   return augment(
//     name,
//     level,
//     GroupEnumAugment.EXPLOIT,
//     [GroupEnumAugment.EXPLOIT],
//     stats,
//   );
// };

const DATA_BP: number[] = [6, 11];
const DATA_WEAPON_UP: number[] = [1.025, 1.04];

(() => {
  DATA_BP.forEach((bp, level_index) => {
    const weapon_up = DATA_WEAPON_UP[level_index];

    data.push(
      augment(
        "Fire Exploit",
        level_index + 1,
        GroupEnumAugment.EXPLOIT,
        [GroupEnumAugment.EXPLOIT],
        (ctx) => {
          const stat = statObject({
            [StatEnum.CORE_BP]: bp,
          });

          if (ctx.target === undefined) {
            return stat;
          }

          if (ctx.target.isWeakToFire) {
            stat.setStat(StatEnum.WEAPON_MELEE, weapon_up);
            stat.setStat(StatEnum.WEAPON_RANGED, weapon_up);
            stat.setStat(StatEnum.WEAPON_TECHNIQUE, weapon_up);
          }

          return stat;
        },
      ),
    );
  });
})();

export default data;
